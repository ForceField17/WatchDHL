fgseaResTidy <- gse_order[,c(1:8)]
fgseaResTidy$adj <- ifelse(fgseaResTidy$pvalue <= 0.05, "sig", "c_ns")
fgseaResTidy$adj[fgseaResTidy$NES>0 & fgseaResTidy$pvalue <= 0.05] <- "a_up"
fgseaResTidy$adj[fgseaResTidy$NES<0 & fgseaResTidy$pvalue <= 0.05] <- "b_down"
fgseaResTidy$ID <- gsub("_"," ",tolower(fgseaResTidy$ID))
fgseaResTidy$ID <- gsub("kegg ","",tolower(fgseaResTidy$ID))
TheTable <- fgseaResTidy[which(fgseaResTidy$pvalue <= 0.05 & fgseaResTidy$p.adjust <= 0.4),]
TheTable$dir <- ifelse(TheTable$NES >= 0, 1, -1)
TheTable$ADP <- TheTable$NES
term1 <- kegg$gene[kegg$term=="KEGG_BASE_EXCISION_REPAIR"]
term2 <- kegg$gene[kegg$term=="KEGG_RIBOSOME"]
###################################################################
library(ggrepel)
plotTable <- final_data
plotTable_up <- plotTable[( plotTable$FoldC_Mut_WT  >  1  & plotTable$Pvalue_Mut_WT <  0.05 ) ,]
plotTable_down <- plotTable[( plotTable$FoldC_Mut_WT  <  -1  & plotTable$Pvalue_Mut_WT <  0.05 ) ,]
plotTable_other <- plotTable[which(!(plotTable$geneName %in% plotTable_up$geneName | plotTable$geneName %in% plotTable_down$geneName )),]
plotTable_Onco <- plotTable[(plotTable$geneName %in% term2),]
plotTable_TSG <- plotTable[(plotTable$geneName %in% term1),]
plotTable_sig1 <- plotTable_up[(plotTable_up$geneName %in% plotTable_Onco$geneName ),]
plotTable_sig2 <- plotTable_down[(plotTable_down$geneName %in% plotTable_TSG$geneName),]
plotTable_sig <- rbind(plotTable_Onco)
mySub2 <- ggplot()+theme_classic()
#mySub2 <- mySub2 + stat_density2d(data = plotTable, aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),fill=(log10( (50*..density..)+1))),geom="tile",contour=FALSE,n=200,alpha=0.7)+
#  scale_fill_gradientn(name="Density",colours=c("white", "#007FFF",  "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"),breaks=seq(0,3,1),expand=c(0,1))
mySub2 <- mySub2 + geom_vline(xintercept = 1,linetype=2,color="grey50") +
geom_vline(xintercept = -1,linetype=2,color="grey50")+
geom_hline(yintercept = -log10(0.05),linetype=2,color="grey50")
mySub2 <- mySub2 + geom_point(data = plotTable_other, aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill="grey",alpha=0.2,size=1.2, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_up,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[1]  ,alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_down,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[3],alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig1,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[1],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig2,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[3],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig,   aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
#mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig2,   aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),label = geneName),stat = "identity",position = "identity", max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
#mySub2 <- mySub2 +geom_text_repel(data =plotTable_3,aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
mySub2 <- mySub2 + xlab("Fold change log2( Mut / WT)") + ylab("-log10( p-value )") +
scale_y_continuous(expand=c(0,0),limits=c(0,5.4),breaks=seq(-6,10,1)) +
scale_x_continuous(expand=c(0,0),limits=c(-2.8,4.1),breaks=seq(-6,6,1))
mySub2 <- mySub2 + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,0.5,1),'lines'),plot.title=element_text(size=14,vjust=0.5,hjust=0.5,face='bold.italic'),
legend.key.width=unit(1.5,'cm'),legend.key.height=unit(0.5,'cm'),legend.position='top',
legend.margin=margin(t=0.1,r=0.1,b=0,l=0.1,unit='cm'),legend.text=element_text(size=12),axis.text.y=element_text(size=10,face='plain',color='black'),
axis.text.x=element_text(size=10,face='plain',color='black'),axis.title.x=element_text(size=12,face='plain',color='black'),axis.title.y=element_text(size=12,hjust=0.5,vjust=2,face='plain',color='black'))
figure_4<-rbind(ggplotGrob(mySub2),size="last")
ggsave(file="./figRiccardo/volcano_test.pdf", plot=figure_4,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
library(ggrepel)
plotTable <- final_data
plotTable_up <- plotTable[( plotTable$FoldC_Mut_WT  >  1  & plotTable$Pvalue_Mut_WT <  0.05 ) ,]
plotTable_down <- plotTable[( plotTable$FoldC_Mut_WT  <  -1  & plotTable$Pvalue_Mut_WT <  0.05 ) ,]
plotTable_other <- plotTable[which(!(plotTable$geneName %in% plotTable_up$geneName | plotTable$geneName %in% plotTable_down$geneName )),]
plotTable_Onco <- plotTable[(plotTable$geneName %in% term1),]
plotTable_TSG <- plotTable[(plotTable$geneName %in% term2),]
plotTable_sig1 <- plotTable_up[(plotTable_up$geneName %in% plotTable_Onco$geneName ),]
plotTable_sig2 <- plotTable_down[(plotTable_down$geneName %in% plotTable_TSG$geneName),]
plotTable_sig <- rbind(plotTable_Onco)
mySub2 <- ggplot()+theme_classic()
#mySub2 <- mySub2 + stat_density2d(data = plotTable, aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),fill=(log10( (50*..density..)+1))),geom="tile",contour=FALSE,n=200,alpha=0.7)+
#  scale_fill_gradientn(name="Density",colours=c("white", "#007FFF",  "#7FFF7F", "yellow", "#FF7F00", "red", "#7F0000"),breaks=seq(0,3,1),expand=c(0,1))
mySub2 <- mySub2 + geom_vline(xintercept = 1,linetype=2,color="grey50") +
geom_vline(xintercept = -1,linetype=2,color="grey50")+
geom_hline(yintercept = -log10(0.05),linetype=2,color="grey50")
mySub2 <- mySub2 + geom_point(data = plotTable_other, aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill="grey",alpha=0.2,size=1.2, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_up,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[1]  ,alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_down,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[3],alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig1,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[1],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig2,    aes(x =  (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT)),fill=gg_color_hue(3)[3],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig,   aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
#mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig2,   aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),label = geneName),stat = "identity",position = "identity", max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
#mySub2 <- mySub2 +geom_text_repel(data =plotTable_3,aes(x = (FoldC_Mut_WT), y = -log10(Pvalue_Mut_WT),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
mySub2 <- mySub2 + xlab("Fold change log2( Mut / WT)") + ylab("-log10( p-value )") +
scale_y_continuous(expand=c(0,0),limits=c(0,5.4),breaks=seq(-6,10,1)) +
scale_x_continuous(expand=c(0,0),limits=c(-2.8,4.1),breaks=seq(-6,6,1))
mySub2 <- mySub2 + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,0.5,1),'lines'),plot.title=element_text(size=14,vjust=0.5,hjust=0.5,face='bold.italic'),
legend.key.width=unit(1.5,'cm'),legend.key.height=unit(0.5,'cm'),legend.position='top',
legend.margin=margin(t=0.1,r=0.1,b=0,l=0.1,unit='cm'),legend.text=element_text(size=12),axis.text.y=element_text(size=10,face='plain',color='black'),
axis.text.x=element_text(size=10,face='plain',color='black'),axis.title.x=element_text(size=12,face='plain',color='black'),axis.title.y=element_text(size=12,hjust=0.5,vjust=2,face='plain',color='black'))
figure_4<-rbind(ggplotGrob(mySub2),size="last")
ggsave(file="./figRiccardo/volcano_test.pdf", plot=figure_4,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
# pGCT
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(DESeq2)
library(stringr)
library("pheatmap")
library("RColorBrewer")
library(fgsea)
library(ComplexHeatmap)
library(circlize)
library(rstatix)
library(ggpubr)
library(ggrepel)
library(preprocessCore)
library(clusterProfiler)
library(enrichplot)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 150)[1:n]
}
scale_rows = function(x){
m = apply(x, 1, mean, na.rm = T)
s = apply(x, 1, sd, na.rm = T)
return((x - m) / s)
}
data_summary <- function(x) {
m <- mean(x)
ymin <- m-sd(x)
ymax <- m+sd(x)
return(c(y=m,ymin=ymin,ymax=ymax))
}
#get CNV cases
#raw data preprocessing
Sample_features <- read.delim("Data/Info_Nascent.txt",sep = "\t",header = T)
samples <- data.frame(Sample_features)
rownames(samples) <- Sample_features$case
samples <- samples[which(samples$Cell!="CL1"),]
################
counts1 <- read.csv("Data/Final_Nascent_protein_matrix.txt", sep="", head=T, row.names = "Gene",quote = "\"")
counts1 <- counts1[,which((colnames(counts1 ) %in% samples$case ))]
nrow(counts)
counts <- round(counts1/10000)
xxx <- counts[,c(4:6,10:12,16:18)]
keep <- rowSums(xxx == min(counts)) <= 4
counts <- counts[keep,]
nrow(counts)
dds=DESeqDataSetFromMatrix(countData = counts,colData = samples,design = ~ Group)
vsd <- vst(dds ,blind = TRUE)
#vsd <- rlog(dds, blind = TRUE)
head(assay(vsd), 3)
expMatrix <- assay(vsd)
#expMatrix_1 <- normalize.quantiles(expMatrix, copy = TRUE)
expMatrix_1 <- expMatrix
colnames(expMatrix_1) <- colnames(expMatrix)
rownames(expMatrix_1) <- rownames(expMatrix)
expMatrix_new <- rbind(expMatrix_1)
all(rownames(samples) %in% colnames(expMatrix_new ))
all(colnames(expMatrix_new ) %in% rownames(samples))
#expMatrix_new <- log2(counts)
#testing
data <- expMatrix_new
Pvalue <- rep(NA,nrow(data))
FoldC  <- rep(NA,nrow(data))
Rank   <- rep(NA,nrow(data))
nVar1 <- 0
nVar2 <- 0
nVar3 <- 0
for(i in 1:nrow(data)){
test <- data.frame(as.numeric(data[i,]), samples$Group,samples$Cell)
colnames(test) <- c("value","Group","Cell")
rownames(test) <- colnames(data)
G1 <- test[which(test$Group=="nasWT"),1]
G4 <- test[which(test$Group=="nasOE" | test$Group=="nasRepair"),1]
Var <- var.test(G4,G1)$p.value
if(Var > 0.05){
Pvalue[i] <- t.test(G4,G1,paired = F,var.equal = T)$p.value
nVar3 <- nVar3 + 1
}else{
Pvalue[i] <- t.test(G4,G1,paired = F,var.equal = F)$p.value
}
FoldC[i]  <-  mean(G4)-mean(G1)
Rank[i] <- (mean(G4)-mean(G1)) / ( sd(G4)^2/length(G4) + sd(G1)^2/length(G1) )^0.5
}
xxx <- data
rowMean <- rowMeans(xxx)
rowSD <- rowSds(xxx)
geneName <-rownames(xxx)
FDR <- p.adjust(Pvalue,method = "fdr")
final_data <- data.frame(geneName,rowMean,rowSD,Pvalue,FDR_OE_WT,FDR,FoldC,Rank)
final_data <- data.frame(geneName,rowMean,rowSD,Pvalue,FDR,FoldC,Rank)
resOrdered <- final_data[order(-final_data$rowSD),]
head(resOrdered)
filtterData <- resOrdered[which( resOrdered$Pvalue<0.05 & (resOrdered$FoldC > 0.25 | resOrdered$FoldC < -0.25 )),]
write.csv(filtterData , file = "./figs/Statistical_seleted_genesEXP_combined.csv")
#heatmap
ann_colors = list(
Group = c(nasOE="#e9a3c9",nasRepair="#a1d76a",nasWT="grey80",OE="#ca0020",Repair="#008837",WT="grey20")
)
mat <- expMatrix_new[which(rownames(expMatrix_new) %in% filtterData$geneName),]
anno_col <- as.data.frame(samples[, c("Group")])
colnames(anno_col) <- c("Group")
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=6,height=7)
pheatmap(mat,cutree_rows=2,cutree_cols=3,cluster_cols = F,cluster_rows = T,gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
###################################################################
filtterData <- resOrdered[which( resOrdered$FDR<0.05 & (resOrdered$FoldC > 0.5 | resOrdered$FoldC < -0.5 )),]
write.csv(filtterData , file = "./figs/Statistical_seleted_genesEXP_combined.csv")
ann_colors = list(
Group = c(nasOE="#e9a3c9",nasRepair="#a1d76a",nasWT="grey80",OE="#ca0020",Repair="#008837",WT="grey20")
)
mat <- expMatrix_new[which(rownames(expMatrix_new) %in% filtterData$geneName),]
anno_col <- as.data.frame(samples[, c("Group")])
colnames(anno_col) <- c("Group")
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=6,height=7)
pheatmap(mat,cutree_rows=2,cutree_cols=3,cluster_cols = F,cluster_rows = T,gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=6,height=14)
pheatmap(mat,cutree_rows=2,cutree_cols=3,cluster_cols = F,cluster_rows = T,gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
filtterData <- resOrdered[which( resOrdered$FDR<0.01 & (resOrdered$FoldC > 0.5 | resOrdered$FoldC < -0.5 )),]
write.csv(filtterData , file = "./figs/Statistical_seleted_genesEXP_combined.csv")
#heatmap
ann_colors = list(
Group = c(nasOE="#e9a3c9",nasRepair="#a1d76a",nasWT="grey80",OE="#ca0020",Repair="#008837",WT="grey20")
)
mat <- expMatrix_new[which(rownames(expMatrix_new) %in% filtterData$geneName),]
anno_col <- as.data.frame(samples[, c("Group")])
colnames(anno_col) <- c("Group")
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=6,height=14)
pheatmap(mat,cutree_rows=2,cutree_cols=6,cluster_cols = F,cluster_rows = T,gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=6,height=14)
pheatmap(mat,cutree_rows=2,cutree_cols=6,cluster_cols = T,cluster_rows = T,#gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=6,height=14)
pheatmap(mat,cutree_rows=2,cutree_cols=3,cluster_cols = T,cluster_rows = T,#gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
pdf(file = paste0("./figs/heatmap_combined.pdf"),width=8,height=14)
pheatmap(mat,cutree_rows=2,cutree_cols=3,cluster_cols = T,cluster_rows = T,#gaps_col=c(3,6),
color = colorRampPalette(c('#29419E','#698DC9',"grey95",'#F67172','#DC2B18'))(50),
annotation_col = anno_col,annotation_names_col=T,show_rownames = T,annotation_legend = T,
scale = "row",annotation_colors = ann_colors,border_color = "grey20",
clustering_distance_cols = "correlation",legend = TRUE, legend_breaks = NA,legend_labels = NA,
clustering_distance_rows = "correlation", #"euclidean",#cellwidth = 15, #cellheight = 2,
fontsize = 14,fontsize_row = 12, fontsize_col = 14, display_numbers = F,
number_format = "%.0f", number_color = "grey6030", fontsize_number = 2)
dev.off()
#########
#########
TSG <- read.table("../Nascent_protein/lib/TS_list.txt",header=F)
ONCO <- read.table("../Nascent_protein/lib/OC_list.txt",header=F)
marker <- read.table("../Nascent_protein/lib/All_marker.txt",header = T)
library(ggrepel)
plotTable <- final_data
plotTable_up <- plotTable[( plotTable$FoldC  >  0.5  & plotTable$FDR <  0.05 ) ,]
plotTable_down <- plotTable[( plotTable$FoldC  <  -0.5  & plotTable$FDR <  0.05 ) ,]
plotTable_other <- plotTable[which(!(plotTable$geneName %in% plotTable_up$geneName | plotTable$geneName %in% plotTable_down$geneName )),]
plotTable_Onco <- plotTable[(plotTable$geneName %in% c(ONCO$V1,"AICDA")),]
plotTable_TSG <- plotTable[(plotTable$geneName %in% TSG$V1),]
plotTable_sig1 <- plotTable_up[(plotTable_up$geneName %in% plotTable_Onco$geneName ),]
plotTable_sig2 <- plotTable_down[(plotTable_down$geneName %in% plotTable_TSG$geneName),]
plotTable_sig <- rbind(plotTable_sig1,plotTable_sig2)
mySub2 <- ggplot()+theme_classic()
mySub2 <- mySub2 + geom_vline(xintercept = 0.2,linetype=2,color="grey50") +
geom_vline(xintercept = -0.2,linetype=2,color="grey50")+
geom_hline(yintercept = -log10(0.05),linetype=2,color="grey50")
mySub2 <- mySub2 + geom_point(data = plotTable_other,   aes(x =  (FoldC), y = -log10(FDR)),fill="grey",alpha=0.2,size=1.2, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_up,      aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1]  ,alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_down,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig1,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig2,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig,   aes(x = (FoldC), y = -log10(FDR),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
mySub2 <- mySub2 + xlab("Fold change log2( Alter / WT)") + ylab("-log10( FDR )") +
scale_y_continuous(expand=c(0,0),limits=c(0,5.4),breaks=seq(-6,10,1)) +
scale_x_continuous(expand=c(0,0),limits=c(-0.8,0.8),breaks=seq(-1,1,0.2))
mySub2 <- mySub2 + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,0.5,1),'lines'),plot.title=element_text(size=14,vjust=0.5,hjust=0.5,face='bold.italic'),
legend.key.width=unit(1.5,'cm'),legend.key.height=unit(0.5,'cm'),legend.position='top',
legend.margin=margin(t=0.1,r=0.1,b=0,l=0.1,unit='cm'),legend.text=element_text(size=12),axis.text.y=element_text(size=10,face='plain',color='black'),
axis.text.x=element_text(size=10,face='plain',color='black'),axis.title.x=element_text(size=12,face='plain',color='black'),axis.title.y=element_text(size=12,hjust=0.5,vjust=2,face='plain',color='black'))
figure_4<-rbind(ggplotGrob(mySub2),size="last")
ggsave(file="./figs/volcano_Alter_WT_combined.pdf", plot=figure_4,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
library(ggrepel)
plotTable <- final_data
plotTable_up <- plotTable[( plotTable$FoldC  >  0.5  & plotTable$FDR <  0.05 ) ,]
plotTable_down <- plotTable[( plotTable$FoldC  <  -0.5  & plotTable$FDR <  0.05 ) ,]
plotTable_other <- plotTable[which(!(plotTable$geneName %in% plotTable_up$geneName | plotTable$geneName %in% plotTable_down$geneName )),]
plotTable_Onco <- plotTable[(plotTable$geneName %in% c(ONCO$V1,"AICDA")),]
plotTable_TSG <- plotTable[(plotTable$geneName %in% TSG$V1),]
plotTable_sig1 <- plotTable_up[(plotTable_up$geneName %in% plotTable_Onco$geneName ),]
plotTable_sig2 <- plotTable_down[(plotTable_down$geneName %in% plotTable_TSG$geneName),]
plotTable_sig <- rbind(plotTable_sig1,plotTable_sig2)
mySub2 <- ggplot()+theme_classic()
mySub2 <- mySub2 + geom_vline(xintercept = 0.5,linetype=2,color="grey50") +
geom_vline(xintercept = -0.5,linetype=2,color="grey50")+
geom_hline(yintercept = -log10(0.05),linetype=2,color="grey50")
mySub2 <- mySub2 + geom_point(data = plotTable_other,   aes(x =  (FoldC), y = -log10(FDR)),fill="grey",alpha=0.2,size=1.2, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_up,      aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1]  ,alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_down,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig1,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig2,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig,   aes(x = (FoldC), y = -log10(FDR),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
mySub2 <- mySub2 + xlab("Fold change log2( Alter / WT)") + ylab("-log10( FDR )") +
scale_y_continuous(expand=c(0,0),limits=c(0,4.1),breaks=seq(-6,10,1)) +
scale_x_continuous(expand=c(0,0),limits=c(-2.8,2.8),breaks=seq(-1,1,0.2))
mySub2 <- mySub2 + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,0.5,1),'lines'),plot.title=element_text(size=14,vjust=0.5,hjust=0.5,face='bold.italic'),
legend.key.width=unit(1.5,'cm'),legend.key.height=unit(0.5,'cm'),legend.position='top',
legend.margin=margin(t=0.1,r=0.1,b=0,l=0.1,unit='cm'),legend.text=element_text(size=12),axis.text.y=element_text(size=10,face='plain',color='black'),
axis.text.x=element_text(size=10,face='plain',color='black'),axis.title.x=element_text(size=12,face='plain',color='black'),axis.title.y=element_text(size=12,hjust=0.5,vjust=2,face='plain',color='black'))
figure_4<-rbind(ggplotGrob(mySub2),size="last")
ggsave(file="./figs/volcano_Alter_WT_combined.pdf", plot=figure_4,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
mySub2 <- ggplot()+theme_classic()
mySub2 <- mySub2 + geom_vline(xintercept = 0.5,linetype=2,color="grey50") +
geom_vline(xintercept = -0.5,linetype=2,color="grey50")+
geom_hline(yintercept = -log10(0.05),linetype=2,color="grey50")
mySub2 <- mySub2 + geom_point(data = plotTable_other,   aes(x =  (FoldC), y = -log10(FDR)),fill="grey",alpha=0.2,size=1.2, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_up,      aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1]  ,alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_down,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig1,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig2,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig,   aes(x = (FoldC), y = -log10(FDR),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
mySub2 <- mySub2 + xlab("Fold change log2( Alter / WT)") + ylab("-log10( FDR )") +
scale_y_continuous(expand=c(0,0),limits=c(0,4.1),breaks=seq(-6,10,1)) +
scale_x_continuous(expand=c(0,0),limits=c(-1.8,1.8),breaks=seq(-1,1,0.4))
mySub2 <- mySub2 + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,0.5,1),'lines'),plot.title=element_text(size=14,vjust=0.5,hjust=0.5,face='bold.italic'),
legend.key.width=unit(1.5,'cm'),legend.key.height=unit(0.5,'cm'),legend.position='top',
legend.margin=margin(t=0.1,r=0.1,b=0,l=0.1,unit='cm'),legend.text=element_text(size=12),axis.text.y=element_text(size=10,face='plain',color='black'),
axis.text.x=element_text(size=10,face='plain',color='black'),axis.title.x=element_text(size=12,face='plain',color='black'),axis.title.y=element_text(size=12,hjust=0.5,vjust=2,face='plain',color='black'))
figure_4<-rbind(ggplotGrob(mySub2),size="last")
ggsave(file="./figs/volcano_Alter_WT_combined.pdf", plot=figure_4,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
mySub2 <- ggplot()+theme_classic()
mySub2 <- mySub2 + geom_vline(xintercept = 0.5,linetype=2,color="grey50") +
geom_vline(xintercept = -0.5,linetype=2,color="grey50")+
geom_hline(yintercept = -log10(0.05),linetype=2,color="grey50")
mySub2 <- mySub2 + geom_point(data = plotTable_other,   aes(x =  (FoldC), y = -log10(FDR)),fill="grey",alpha=0.2,size=1.2, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_up,      aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1]  ,alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_down,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.15,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig1,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[1],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 + geom_point(data = plotTable_sig2,    aes(x =  (FoldC), y = -log10(FDR)),fill=gg_color_hue(3)[3],alpha=0.9,size=1.5, shape = 21,stroke=0.2)
mySub2 <- mySub2 +geom_text_repel(data =plotTable_sig,   aes(x = (FoldC), y = -log10(FDR),label = geneName),stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,segment.size =0.2, size =2.4,color ='black')
mySub2 <- mySub2 + xlab("Fold change log2( Alter / WT)") + ylab("-log10( FDR )") +
scale_y_continuous(expand=c(0,0),limits=c(0,4.1),breaks=seq(-6,10,1)) +
scale_x_continuous(expand=c(0,0),limits=c(-1.4,1.4),breaks=seq(-1,1,0.5))
mySub2 <- mySub2 + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,0.5,1),'lines'),plot.title=element_text(size=14,vjust=0.5,hjust=0.5,face='bold.italic'),
legend.key.width=unit(1.5,'cm'),legend.key.height=unit(0.5,'cm'),legend.position='top',
legend.margin=margin(t=0.1,r=0.1,b=0,l=0.1,unit='cm'),legend.text=element_text(size=12),axis.text.y=element_text(size=10,face='plain',color='black'),
axis.text.x=element_text(size=10,face='plain',color='black'),axis.title.x=element_text(size=12,face='plain',color='black'),axis.title.y=element_text(size=12,hjust=0.5,vjust=2,face='plain',color='black'))
figure_4<-rbind(ggplotGrob(mySub2),size="last")
ggsave(file="./figs/volcano_Alter_WT_combined.pdf", plot=figure_4,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
a <- data.frame( c( nrow(plotTable_sig2), nrow(plotTable_TSG[which(!(plotTable_TSG$geneName %in% plotTable_down$geneName)),]) ),
c( nrow(plotTable_down[which(!(plotTable_down$geneName %in% plotTable_TSG$geneName)),]), nrow(plotTable[which(!(plotTable$geneName %in% plotTable_down$geneName | plotTable$geneName %in% plotTable_TSG$geneName)),])  ))
colnames(a) <- c("TSG","nonTSG")
rownames(a) <- c("Down","notDown")
a
fisher.test(a,alternative = "two.sided")
b <- data.frame( c( nrow(plotTable_sig1), nrow(plotTable_Onco[which(!(plotTable_Onco$geneName %in% plotTable_up$geneName)),]) ),
c( nrow(plotTable_up[which(!(plotTable_up$geneName %in% plotTable_Onco$geneName)),]), nrow(plotTable[which(!(plotTable$geneName %in% plotTable_up$geneName | plotTable$geneName %in% plotTable_Onco$geneName)),])  ))
colnames(b) <- c("ONCO","nonONCO")
rownames(b) <- c("Up","notUp")
b
fisher.test(b,alternative = "two.sided")
ranks <-  final_data$FoldC
names(ranks) <- final_data$geneName
geneList <- na.omit(ranks)
geneList = sort(geneList, decreasing = T)
str(ranks)
kegg <- read.gmt("../Nascent_protein/lib/KEGG_ALL.gmt")
gse <- GSEA(geneList=geneList, TERM2GENE= kegg, pvalueCutoff = 0.2, minGSSize = 9,maxGSSize = 400,
eps = 1e-50, pAdjustMethod = "BH", verbose = FALSE, seed = T, by = "fgsea")
gse_order<-gse[order(gse$enrichmentScore,decreasing=T)]
head(gse_order)
write.table(gse_order,file="report_inte2.txt",sep="\t",quote=F,row.names = F)
fgseaResTidy <- gse_order[,c(1:8)]
fgseaResTidy$adj <- ifelse(fgseaResTidy$pvalue <= 0.05, "sig", "c_ns")
fgseaResTidy$adj[fgseaResTidy$NES>0 & fgseaResTidy$pvalue <= 0.05] <- "a_up"
fgseaResTidy$adj[fgseaResTidy$NES<0 & fgseaResTidy$pvalue <= 0.05] <- "b_down"
fgseaResTidy$ID <- gsub("_"," ",tolower(fgseaResTidy$ID))
fgseaResTidy$ID <- gsub("kegg ","",tolower(fgseaResTidy$ID))
TheTable <- fgseaResTidy[which(fgseaResTidy$pvalue <= 0.05 & fgseaResTidy$p.adjust <= 0.05),]
TheTable$dir <- ifelse(TheTable$NES >= 0, 1, -1)
TheTable$ADP <- TheTable$NES
TheTable
# WatchDHL
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(ggrepel)
library(reshape2)
library(plyr)
library(ggpubr)
library(rstatix)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
#raw data preprocessing
tableA <- read.table('./results.txt',header=F)
tableA$middle <- (tableA$V3+tableA$V5)/2
the1 <- wilcox.test(tableA$V3, tableA$V5, paired = T)
tableA1 <- data.frame(c(tableA$V1,tableA$V1),c(tableA$V2,tableA$V4),c(tableA$V3,tableA$V5),c(tableA$V7,tableA$V7),c(tableA$V11,tableA$V11),
c(tableA$V12,tableA$V12),c(tableA$V13,tableA$V13),c(tableA$V14,tableA$V14),c(tableA$V15,tableA$V15),c(tableA$V16,tableA$V16),c(tableA$middle,tableA$middle),c(rep("FL",nrow(tableA)),rep("DHL",nrow(tableA))))
# WatchDHL
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(ggrepel)
library(reshape2)
library(plyr)
library(ggpubr)
library(rstatix)
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
#raw data preprocessing
tableA <- read.table('H3K27ac/results.txt',header=F)
tableA$middle <- (tableA$V3+tableA$V5)/2
the1 <- wilcox.test(tableA$V3, tableA$V5, paired = T)
tableA1 <- data.frame(c(tableA$V1,tableA$V1),c(tableA$V2,tableA$V4),c(tableA$V3,tableA$V5),c(tableA$V7,tableA$V7),c(tableA$V11,tableA$V11),
c(tableA$V12,tableA$V12),c(tableA$V13,tableA$V13),c(tableA$V14,tableA$V14),c(tableA$middle,tableA$middle),c(rep("FL",nrow(tableA)),rep("DHL",nrow(tableA))))
colnames(tableA1) <- c("peakID","Mutfraction","MutNumber","nearbyGene","MutDiff","Rank1","Rank2","Rank3","middle","Tumor")
#tableA1 <- tableA1[which(tableA1$Rank1 <= 10000),]
NAN_plot <- ggplot(data=tableA1,aes(x=Rank1,y=Mutfraction)) + theme_classic()
NAN_plot <- NAN_plot +
geom_line(aes(group = peakID),color="grey",size=0.5)+
geom_point(data=tableA1,aes(color=Tumor),alpha=0.6,shape=20,size=2)
NAN_plot <-NAN_plot + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,2,0,3),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position='none',legend.text=element_text(size=14,hjust=0,face='bold'),
axis.text.x=element_text(size=12,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=14,face='plain',color='black'),axis.title.y=element_text(size=14,face='plain',color='black'))
NAN_plot <- NAN_plot + scale_x_continuous(expand=c(0,0),limits=c(0.9,max(tableA1$Rank1+3000)),breaks = c(1,10,100,1000,10000),trans="log2")
NAN_plot <- NAN_plot + scale_y_continuous(expand=c(0,0),limits=c(-0.01,0.65))
NAN_plot<- NAN_plot +ylab("Percentage of mutations loaded") +xlab("Rank of peaks (Top 1000 mutated)")
NAN_plot <- NAN_plot + scale_fill_manual(name=NULL,values =  c(gg_color_hue(6)[1],gg_color_hue(6)[3]))
NAN_plot <- NAN_plot + scale_color_manual(name=NULL,values =  c(gg_color_hue(6)[1],gg_color_hue(6)[3]))
NAN_plot1 <- NAN_plot
figure<-rbind(ggplotGrob(NAN_plot),size="last")
ggsave(file="H3K27ac.pdf", plot=figure,bg = 'white', width =15, height = 8, units = 'cm', dpi = 600)
the1$p.value
tableA <- read.table('H3K4me3/results.txt',header=F)
tableA$middle <- (tableA$V3+tableA$V5)/2
the2 <- wilcox.test(tableA$V3, tableA$V5, paired = T)
tableA1 <- data.frame(c(tableA$V1,tableA$V1),c(tableA$V2,tableA$V4),c(tableA$V3,tableA$V5),c(tableA$V7,tableA$V7),c(tableA$V11,tableA$V11),
c(tableA$V12,tableA$V12),c(tableA$V13,tableA$V13),c(tableA$V14,tableA$V14),c(tableA$middle,tableA$middle),c(rep("FL",nrow(tableA)),rep("DHL",nrow(tableA))))
colnames(tableA1) <- c("peakID","Mutfraction","MutNumber","nearbyGene","MutDiff","Rank1","Rank2","Rank3","middle","Tumor")
#tableA1 <- tableA1[which(tableA1$Rank1 <= 10000),]
NAN_plot <- ggplot(data=tableA1,aes(x=Rank1,y=Mutfraction)) + theme_classic()
NAN_plot <- NAN_plot +
geom_line(aes(group = peakID),color="grey",size=0.5)+
geom_point(data=tableA1,aes(color=Tumor),alpha=0.6,shape=20,size=2)
NAN_plot <-NAN_plot + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(1,2,2,3),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position='none',legend.text=element_text(size=14,hjust=0,face='bold'),
axis.text.x=element_text(size=12,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=14,face='plain',color='black'),axis.title.y=element_text(size=14,face='plain',color='black'))
NAN_plot <- NAN_plot + scale_x_continuous(expand=c(0,0),limits=c(0.9,max(tableA1$Rank1+3000)),breaks = c(1,10,100,1000,10000),trans="log2")
NAN_plot <- NAN_plot + scale_y_continuous(expand=c(0,0),limits=c(-0.01,0.65))
NAN_plot<- NAN_plot +ylab("Percentage of mutations loaded") +xlab("Rank of peaks (Top 1000 mutated)")
NAN_plot <- NAN_plot + scale_fill_manual(name=NULL,values =  c(gg_color_hue(6)[1],gg_color_hue(6)[3]))
NAN_plot <- NAN_plot + scale_color_manual(name=NULL,values =  c(gg_color_hue(6)[1],gg_color_hue(6)[3]))
NAN_plot2 <- NAN_plot
figure<-rbind(ggplotGrob(NAN_plot),size="last")
ggsave(file="H3K4me3.pdf", plot=figure,bg = 'white', width =15, height = 8, units = 'cm', dpi = 600)
the2$p.value
NAN_plot <- ggplot(data=tableA1,aes(x=Rank1,y=Mutfraction)) + theme_classic()
NAN_plot <- NAN_plot +
geom_line(aes(group = peakID),color="grey",size=0.5)+
geom_point(data=tableA1,aes(color=Tumor),alpha=0.6,shape=20,size=2)
NAN_plot <-NAN_plot + theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,2,0,3),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position='none',legend.text=element_text(size=14,hjust=0,face='bold'),
axis.text.x=element_text(size=12,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=14,face='plain',color='black'),axis.title.y=element_text(size=14,face='plain',color='black'))
NAN_plot <- NAN_plot + scale_x_continuous(expand=c(0,0),limits=c(0.9,max(tableA1$Rank1+3000)),breaks = c(1,10,100,1000,10000),trans="log2")
NAN_plot <- NAN_plot + scale_y_continuous(expand=c(0,0),limits=c(-0.01,0.65))
NAN_plot<- NAN_plot +ylab("Percentage of mutations loaded") +xlab("Rank of peaks (Top 1000 mutated)")
NAN_plot <- NAN_plot + scale_fill_manual(name=NULL,values =  c(gg_color_hue(6)[1],gg_color_hue(6)[3]))
NAN_plot <- NAN_plot + scale_color_manual(name=NULL,values =  c(gg_color_hue(6)[1],gg_color_hue(6)[3]))
NAN_plot2 <- NAN_plot
figure<-rbind(ggplotGrob(NAN_plot),size="last")
ggsave(file="H3K4me3.pdf", plot=figure,bg = 'white', width =15, height = 8, units = 'cm', dpi = 600)
the2$p.value
