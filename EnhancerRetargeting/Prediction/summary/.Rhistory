current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(DESeq2)
library(stringr)
library("pheatmap")
library("RColorBrewer")
library(fgsea)
library(ComplexHeatmap)
library(circlize)
library("SC3")
library("ggrepel")
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 150)[1:n]
}
counts1 <- read.csv("./AllCellLine_withBam.txt", sep="", head=T, row.names = "CellLine",quote = "\"")
nrow(counts1)
counts <- na.omit(counts1)
Name <- as.character(colnames(counts))
x.term <- as.character(trimws(Name, which = c("both", "left", "right"), whitespace = "[ \t\r\n]"))
Sample_features <- read.delim("./Info23Bam.txt",sep = "\t",header = T)
samples <- data.frame(Sample_features)
rownames(samples) <- Sample_features$case
all(rownames(samples) %in% colnames(counts))
selected <- which(samples$DNA=="WGS" & samples$tissue=="CellLine")# & samples$case!="OCILY19")
samples <- samples[selected,]
counts <- counts[,selected]
all(rownames(samples) %in% colnames(counts))
## create DESeq2 object
dds=DESeqDataSetFromMatrix(countData = counts,colData = samples,design = ~ PAX5.noncoding)
nrow(dds)
#keep <- rowSums(counts(dds)) > 10
keep <- rowSums(counts(dds) >= 50) >= 3
dds <- dds[keep,]
nrow(dds)
#for n > 30
vsd <- vst(dds, blind = FALSE)
#vsd <- rlog(dds, blind = FALSE)
head(assay(vsd), 3)
#check
expMatrix <- assay(vsd)
library(preprocessCore)
expMatrix_new <- normalize.quantiles(expMatrix, copy = TRUE)
colnames(expMatrix_new) <- colnames(expMatrix)
rownames(expMatrix_new) <- rownames(expMatrix)
expMatrix <- expMatrix_new
####
genePairs <- read.table("final.TAD_gene_pairs.txt",sep = "\t",header = F)
colnames(genePairs) <- c("V1","V2","direction","distance")
hyper <- read.table("hyper.txt",sep = "\t",header = F)
data <- expMatrix
selected <- which(samples$tissue=="CellLine")
genePairs <- genePairs[which(genePairs$V1 %in% rownames(data) & genePairs$V2 %in% rownames(data)),]
pValue <- rep(1,nrow(genePairs))
pValue_LR <- rep(1,nrow(genePairs))
SpearmanR <- rep(1,nrow(genePairs))
MeanExpA <- rep(1,nrow(genePairs))
MeanExpB <- rep(1,nrow(genePairs))
for(i in 1:nrow(genePairs)){
geneA <- data[which(rownames(data) == genePairs[i,1]),]
geneB <- data[which(rownames(data) == genePairs[i,2]),]
Sample <- samples
Sample$Exp_geneA <- geneA
Sample$Exp_geneB <- geneB
Sample$Zscore_geneA <- (Sample$Exp_geneA-mean(Sample$Exp_geneA))/sd(Sample$Exp_geneA)
Sample$Zscore_geneB <- (Sample$Exp_geneB-mean(Sample$Exp_geneB))/sd(Sample$Exp_geneB)
#Sample <- Sample[which(Sample$ZCCHC7=="WT"),]
a<-cor.test(Sample$Zscore_geneA,Sample$Zscore_geneB,method = "spearman")
a$p.value
a$estimate
if((a$p.value <= 0.001 & a$estimate <= -0.8) | genePairs[i,1] %in% hyper$V1 | genePairs[i,2] %in% hyper$V1  ){
new.plot<-ggplot() +theme_classic()
new.plot <- new.plot+   geom_smooth(data = Sample, aes(x = Zscore_geneA, y = Zscore_geneB),method = "lm", se = F,formula= y ~ x,color="grey")
new.plot <- new.plot+   geom_point(data = Sample, aes(x = Zscore_geneA, y = Zscore_geneB,color=Histology),alpha=0.9,size=3)
#geom_text_repel(data =Sample ,aes(x=Zscore_geneA,y=Zscore_geneB,label=case),
#                stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,
#                segment.size =0.2, size =2.4,color ='black')+
#geom_text(aes(x=2.43,y=2.8,label=paste0("pvalue = ",round(a$p.value,3))),color="blue",size=3)+
#geom_text(aes(x=2.43,y=2.62,label=paste0("SCC = ",round(a$estimate,3))),color="blue",size=3)
new.plot<- new.plot +  theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(1,1,1,1),'lines'),legend.title=element_text(size=12,face='plain',color='black'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=12,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=10,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
new.plot<- new.plot+ylab(paste0("Expression of ",genePairs[i,2]))+xlab(paste0("Expression of ",genePairs[i,1]))
new.plot<- new.plot+scale_y_continuous(expand=c(0,0),limits=c(-3,3))
new.plot<- new.plot+scale_x_continuous(expand=c(0,0),limits=c(-3,3))
new.plot<- new.plot+ggtitle(paste0(genePairs[i,1]," --- ",genePairs[i,2]))
new.plot<- new.plot+ scale_color_manual(values = c("#8dd3c7","#8dd3c7"),guide = guide_legend(override.aes=list(size=3,shape=16)),na.translate = F)
plot7<-cbind(ggplotGrob(new.plot),size="first")
ggsave(file=paste0("./figs_all/linear_",genePairs[i,1],"_",genePairs[i,2],".pdf"), plot=plot7,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
}
pValue_LR[i] <- a$p.value
SpearmanR[i] <- a$estimate
MeanExpA[i] <-  mean(geneA)
MeanExpB[i] <-  mean(geneB)
}
resultsAmp <-data.frame(genePairs$V1,genePairs$V2,MeanExpA,MeanExpB,SpearmanR,pValue_LR,genePairs$direction)
#resultsAmp$adjust.p <- p.adjust(resultsAmp$pValue_LR,method = "fdr")
write.table(resultsAmp , file = "results_table_CellLine.test.txt",sep = "\t",quote=F,row.names = F)
expMatrix[which(rownames(expMatrix)=="LBHD1"),]
counts[which(rownames(counts)=="LBHD1"),]
expMatrix[which(rownames(expMatrix)=="SNHG1"),]
counts[which(rownames(counts)=="SNHG1"),]
# pGCT
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(DESeq2)
library(stringr)
library("pheatmap")
library("RColorBrewer")
library(fgsea)
library(ComplexHeatmap)
library(circlize)
library("SC3")
library("ggrepel")
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 150)[1:n]
}
counts1 <- read.csv("./AllCellLine_withBam.txt", sep="", head=T, row.names = "CellLine",quote = "\"")
nrow(counts1)
counts <- na.omit(counts1)
Name <- as.character(colnames(counts))
x.term <- as.character(trimws(Name, which = c("both", "left", "right"), whitespace = "[ \t\r\n]"))
Sample_features <- read.delim("./Info23Bam.txt",sep = "\t",header = T)
samples <- data.frame(Sample_features)
rownames(samples) <- Sample_features$case
all(rownames(samples) %in% colnames(counts))
selected <- which(samples$DNA=="WGS" & samples$tissue=="CellLine")# & samples$case!="OCILY19")
samples <- samples[selected,]
counts <- counts[,selected]
all(rownames(samples) %in% colnames(counts))
## create DESeq2 object
dds=DESeqDataSetFromMatrix(countData = counts,colData = samples,design = ~ PAX5.noncoding)
nrow(dds)
#keep <- rowSums(counts(dds)) > 10
keep <- rowSums(counts(dds) >= 50) >= 3
dds <- dds[keep,]
nrow(dds)
#for n > 30
vsd <- vst(dds, blind = FALSE)
#vsd <- rlog(dds, blind = FALSE)
head(assay(vsd), 3)
#check
expMatrix <- assay(vsd)
library(preprocessCore)
expMatrix_new <- normalize.quantiles(expMatrix, copy = TRUE)
colnames(expMatrix_new) <- colnames(expMatrix)
rownames(expMatrix_new) <- rownames(expMatrix)
expMatrix <- expMatrix_new
####
genePairs <- read.table("final.TAD_gene_pairs.txt",sep = "\t",header = F)
colnames(genePairs) <- c("V1","V2","direction","distance")
hyper <- read.table("hyper.txt",sep = "\t",header = F)
data <- expMatrix
selected <- which(samples$tissue=="CellLine")
genePairs <- genePairs[which(genePairs$V1 %in% rownames(data) & genePairs$V2 %in% rownames(data)),]
pValue <- rep(1,nrow(genePairs))
pValue_LR <- rep(1,nrow(genePairs))
SpearmanR <- rep(1,nrow(genePairs))
MeanExpA <- rep(1,nrow(genePairs))
MeanExpB <- rep(1,nrow(genePairs))
for(i in 1:nrow(genePairs)){
geneA <- data[which(rownames(data) == genePairs[i,1]),]
geneB <- data[which(rownames(data) == genePairs[i,2]),]
Sample <- samples
Sample$Exp_geneA <- geneA
Sample$Exp_geneB <- geneB
Sample$Zscore_geneA <- (Sample$Exp_geneA-mean(Sample$Exp_geneA))/sd(Sample$Exp_geneA)
Sample$Zscore_geneB <- (Sample$Exp_geneB-mean(Sample$Exp_geneB))/sd(Sample$Exp_geneB)
#Sample <- Sample[which(Sample$ZCCHC7=="WT"),]
a<-cor.test(Sample$Zscore_geneA,Sample$Zscore_geneB,method = "spearman")
a$p.value
a$estimate
if((a$p.value <= 0.001 & a$estimate <= -0.8) | genePairs[i,1] %in% hyper$V1 | genePairs[i,2] %in% hyper$V1  ){
new.plot<-ggplot() +theme_classic()
new.plot <- new.plot+   geom_smooth(data = Sample, aes(x = Zscore_geneA, y = Zscore_geneB),method = "lm", se = F,formula= y ~ x,color="grey")
new.plot <- new.plot+   geom_point(data = Sample, aes(x = Zscore_geneA, y = Zscore_geneB,color=Histology),alpha=0.9,size=3)
#geom_text_repel(data =Sample ,aes(x=Zscore_geneA,y=Zscore_geneB,label=case),
#                stat = "identity",position = "identity",max.overlaps = getOption("ggrepel.max.overlaps", default = 30),force=1.5,
#                segment.size =0.2, size =2.4,color ='black')+
#geom_text(aes(x=2.43,y=2.8,label=paste0("pvalue = ",round(a$p.value,3))),color="blue",size=3)+
#geom_text(aes(x=2.43,y=2.62,label=paste0("SCC = ",round(a$estimate,3))),color="blue",size=3)
new.plot<- new.plot +  theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(1,1,1,1),'lines'),legend.title=element_text(size=12,face='plain',color='black'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=12,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=10,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
new.plot<- new.plot+ylab(paste0("Expression of ",genePairs[i,2]))+xlab(paste0("Expression of ",genePairs[i,1]))
new.plot<- new.plot+scale_y_continuous(expand=c(0,0),limits=c(-2.5,2.5),breaks = seq(-2,2,1))
new.plot<- new.plot+scale_x_continuous(expand=c(0,0),limits=c(-2.5,2.5),breaks = seq(-2,2,1))
new.plot<- new.plot+ggtitle(paste0(genePairs[i,1]," --- ",genePairs[i,2]))
new.plot<- new.plot+ scale_color_manual(values = c("#8dd3c7","#8dd3c7"),guide = guide_legend(override.aes=list(size=3,shape=16)),na.translate = F)
plot7<-cbind(ggplotGrob(new.plot),size="first")
ggsave(file=paste0("./figs_all/linear_",genePairs[i,1],"_",genePairs[i,2],".pdf"), plot=plot7,bg = 'white', width = 12, height = 10, units = 'cm', dpi = 600)
}
pValue_LR[i] <- a$p.value
SpearmanR[i] <- a$estimate
MeanExpA[i] <-  mean(geneA)
MeanExpB[i] <-  mean(geneB)
}
resultsAmp <-data.frame(genePairs$V1,genePairs$V2,MeanExpA,MeanExpB,SpearmanR,pValue_LR,genePairs$direction)
#resultsAmp$adjust.p <- p.adjust(resultsAmp$pValue_LR,method = "fdr")
write.table(resultsAmp , file = "results_table_CellLine.test.txt",sep = "\t",quote=F,row.names = F)
expMatrix[which(rownames(expMatrix)=="LBHD1"),]
counts[which(rownames(counts)=="LBHD1"),]
expMatrix[which(rownames(expMatrix)=="SNHG1"),]
counts[which(rownames(counts)=="SNHG1"),]
# pGCT
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(plyr)
library("ggpubr")
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
gene.table<-read.table('../gene_pairs_results_table.txt',header=T,sep="\t")
hyper <- read.table("../hyper.txt",sep = "\t",header = F)
New <- gene.table[which(gene.table$genePairs.V1 %in% hyper$V1 | gene.table$genePairs.V2 %in% hyper$V1),]
candidates <- New[which(New$MeanExpA>=9 & New$MeanExpB>=9 & New$SpearmanR < -0.5),]
F1a.plot<-ggplot()+theme_classic()
F1a.plot<-F1a.plot+ geom_histogram(data=gene.table,aes(x=SpearmanR,y=..density..),fill="#c69c72",binwidth=0.1,alpha=0.3,position='identity')
F1a.plot<-F1a.plot+ geom_density(data=gene.table ,aes(x=SpearmanR),color="#c69c72",size=1,alpha=1)
F1a.plot<-F1a.plot+ theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(1,1,1,1),'lines'),legend.title=element_text(size=12,face='plain',color='black'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=12,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="bottom",legend.text=element_text(size=10,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+xlab("Spearman's correlation coefficient")+ylab('Density of gene pairs')
cdat <- ddply(gene.table, "genePairs.direction", summarise, AF.mean=mean(SpearmanR))
cdat
F1a.plot<-F1a.plot+geom_vline(data=cdat, aes(xintercept=mean(gene.table$SpearmanR)),colour="#c69c72",linetype=2, size=0.5) +
scale_color_manual(name=NULL,values=c("#f25c54","#01baef"))
F1a.plot<-F1a.plot+geom_vline(data=New, aes(xintercept=SpearmanR),colour="grey40",linetype=2, size=0.2)
F1a.plot<-F1a.plot+geom_vline(data=candidates , aes(xintercept=SpearmanR,color=genePairs.V1),linetype=1, size=0.4)
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(0,1.5))+scale_x_continuous(expand=c(0,0),limits=c(-1,1),breaks=seq(-1,1,0.2))#
F1a.plot<-F1a.plot + scale_color_manual(name=NULL,values=c("#ef476f","#06d6a0","#118ab2","#88419d"))
F1a.plot
figure_1<-rbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="distri_SCC.pdf", plot=figure_1,bg = 'white', width = 24, height = 12, units = 'cm', dpi = 600)
the2 <- compare_means(SpearmanR ~ genePairs.direction, data = gene.table)
the2
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.25,size=2,alpha=0.7,stroke=0.8, varwidth = T)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
library(ggplot2)
library(DESeq2)
library(stringr)
library("pheatmap")
library("RColorBrewer")
library(fgsea)
library(circlize)
library(ggpubr)
library(ggbeeswarm)
library(preprocessCore)
library(ComplexHeatmap)
library(reshape2)
# pGCT
library(rstudioapi)
# Getting the path of your current open file
current_path = rstudioapi::getActiveDocumentContext()$path
setwd(dirname(current_path ))
print( getwd() )
library(ggplot2)
library(plyr)
library("ggpubr")
gg_color_hue <- function(n) {
hues = seq(15, 375, length = n + 1)
hcl(h = hues, l = 65, c = 100)[1:n]
}
gene.table<-read.table('../gene_pairs_results_table.txt',header=T,sep="\t")
hyper <- read.table("../hyper.txt",sep = "\t",header = F)
New <- gene.table[which(gene.table$genePairs.V1 %in% hyper$V1 | gene.table$genePairs.V2 %in% hyper$V1),]
candidates <- New[which(New$MeanExpA>=9 & New$MeanExpB>=9 & New$SpearmanR < -0.5),]
F1a.plot<-ggplot()+theme_classic()
F1a.plot<-F1a.plot+ geom_histogram(data=gene.table,aes(x=SpearmanR,y=..density..),fill="#c69c72",binwidth=0.1,alpha=0.3,position='identity')
F1a.plot<-F1a.plot+ geom_density(data=gene.table ,aes(x=SpearmanR),color="#c69c72",size=1,alpha=1)
F1a.plot<-F1a.plot+ theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(1,1,1,1),'lines'),legend.title=element_text(size=12,face='plain',color='black'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=12,face='bold'),
legend.key.width=unit(0.6,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="bottom",legend.text=element_text(size=10,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+xlab("Spearman's correlation coefficient")+ylab('Density of gene pairs')
cdat <- ddply(gene.table, "genePairs.direction", summarise, AF.mean=mean(SpearmanR))
cdat
F1a.plot<-F1a.plot+geom_vline(data=cdat, aes(xintercept=mean(gene.table$SpearmanR)),colour="#c69c72",linetype=2, size=0.5) +
scale_color_manual(name=NULL,values=c("#f25c54","#01baef"))
F1a.plot<-F1a.plot+geom_vline(data=New, aes(xintercept=SpearmanR),colour="grey40",linetype=2, size=0.2)
F1a.plot<-F1a.plot+geom_vline(data=candidates , aes(xintercept=SpearmanR,color=genePairs.V1),linetype=1, size=0.4)
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(0,1.5))+scale_x_continuous(expand=c(0,0),limits=c(-1,1),breaks=seq(-1,1,0.2))#
F1a.plot<-F1a.plot + scale_color_manual(name=NULL,values=c("#ef476f","#06d6a0","#118ab2","#88419d"))
F1a.plot
figure_1<-rbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="distri_SCC.pdf", plot=figure_1,bg = 'white', width = 24, height = 12, units = 'cm', dpi = 600)
the2 <- compare_means(SpearmanR ~ genePairs.direction, data = gene.table)
the2
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.25,size=2,alpha=0.7,stroke=0.8, varwidth = T)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 10, height = 18, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.25,size=0.2,alpha=0.2,stroke=0.8, varwidth = T)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 10, height = 18, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.25,size=0.2,alpha=0.2,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 10, height = 18, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.25,size=1,alpha=0.2,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 10, height = 18, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.3,shape=21,size=2,alpha=0,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 10, height = 18, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.3,shape=21,size=2,alpha=0.1,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)+
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 10, height = 18, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.3,shape=21,size=2,alpha=0.1,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
# geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2)) +
stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 8, height = 12, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.3,shape=21,size=2,alpha=0.1,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
# geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2))
#F1a.plot<-F1a.plot+stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f25c54","#01baef"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 8, height = 12, units = 'cm', dpi = 600)
mydata <- gene.table
F1a.plot<-ggplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR,fill=genePairs.direction))+theme_classic()
F1a.plot<-F1a.plot+
#geom_violin(position=position_dodge(0.5),width = 0.7, alpha = 0.2)+
#geom_dotplot(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),binaxis='y',binwidth=0.01, stackdir='center', dotsize=0.3)+
geom_quasirandom(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width = 0.3,shape=21,size=2,alpha=0.1,stroke=0, varwidth = T)+
geom_boxplot(data= mydata ,aes(x=genePairs.direction,y=SpearmanR),width=0.2,size=0.8,alpha=0.1,outlier.size = 1,outlier.shape = NA)
#geom_jitter(aes(x=genePairs.direction,y=SpearmanR,color=genePairs.direction),width = 0.2,cex=0.1,alpha=.2)+
# geom_point(x="opposite_direction",y=mydata$SpearmanR[which(mydata$genePairs.V1=="PAX5" & gene.table$genePairs.V2=="ZCCHC7")],color="red",cex=1.5,size=2,shape=16,alpha=.3)
F1a.plot<-F1a.plot+theme(panel.background=element_rect(fill='transparent',color='transparent'),plot.margin=unit(c(2,1,1,1),'lines'),
plot.title=element_text(size=34,vjust=0.5,hjust=0.5,face='bold.italic',color='transparent'),text=element_text(size=14,face='bold'),
legend.key.width=unit(1,'cm'),legend.key.height=unit(0.6,'cm'),legend.position="right",legend.text=element_text(size=14,hjust=0,face='plain'),
axis.text.x=element_text(size=12,angle=30,vjust=1,hjust=1,face='bold',color='black'),axis.text.y=element_text(size=12,face='bold',color='black'),
axis.title.x=element_text(size=12,vjust=0,hjust=0.5,face='plain',color='black'),axis.title.y=element_text(size=12,face='plain',color='black'))
F1a.plot<-F1a.plot+ggtitle(NULL)+ylab("Spearman's correlation coefficient")+xlab(NULL)
the <- compare_means(SpearmanR ~ genePairs.direction,  data =mydata  )
my_comparisons <- list( c("opposite_direction", "same_direction"))
F1a.plot<-F1a.plot+scale_y_continuous(expand=c(0,0),limits=c(-1,1.2))
#F1a.plot<-F1a.plot+stat_compare_means(comparisons = my_comparisons, method = "wilcox.test")
F1a.plot<-F1a.plot + scale_fill_manual(name=NULL,values=c("#f4a582","#92c5de"),guide = F)
plotxxx<-cbind(ggplotGrob(F1a.plot),size="first")
ggsave(file="./box_SCC.pdf", plot=plotxxx,bg = 'white', width = 8, height = 12, units = 'cm', dpi = 600)
